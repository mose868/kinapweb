rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB
    }

    function isValidVideo() {
      return request.resource.contentType.matches('video/.*')
        && request.resource.size < 100 * 1024 * 1024; // 100MB
    }

    // Profile images
    match /profile_images/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(userId) && isValidImage();
    }

    // Project files
    match /project_files/{projectId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImage();
    }

    // Story images
    match /story_images/{storyId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImage();
    }

    // Marketplace images
    match /marketplace_images/{itemId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImage();
    }

    // Videos
    match /videos/{videoId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidVideo();
    }

    // Thumbnails
    match /thumbnails/{thumbnailId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImage();
    }
  }
} 